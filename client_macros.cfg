#####################################################################
# 	Macros
##################################################################### 
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    {% set BED_TEMP = params.BED|default(101)|int %}
    {% set EXTRUDER_TEMP = params.EXTRUDER|default(235)|int %}
    {% set FL_SIZE = params.SIZE|default("0_0_0_0")|string %}

    M117 Preheating nozzle and bed...
    M104  S{ EXTRUDER_TEMP|int - 45}    ; set nozzle temp to temp-45 before probe
    M190 S{BED_TEMP}                    ; set and wait bed temp
    M106 S0                             ; turn off part cooling fan if still running
    M117 First home...
    G28                                 ; home all axes
    BED_MESH_CLEAR
    M117 Running QGL...
    QUAD_GANTRY_LEVEL                   ; QGL
    M117 Heating nozzle to temp...
    M109 S{EXTRUDER_TEMP}               ; set and wait nozzle temp
    M117 Purge/Clean nozzle             ; Nozzle scrub
    CLEAN_NOZZLE
    M117 Calibrating Z offset...
    CALIBRATE_Z                         ; Calibrate Z offset (replaces second G28 homing)
    M117 Running bed mesh...
    ADAPTIVE_BED_MESH SIZE={FL_SIZE}    ; do adaptive bed mesh
    # PURGE_LINE   
    CLEAN_NOZZLE       
    M117 Begin print!
 
[gcode_macro PURGE_LINE]
gcode:
    G90                              
    G0 X115 Y5 Z0.2 F18000           ; move nozzle
    G92 E0                           ; Set position of extruder to 0(aka reset extruder)
    G1 E10 F600                      ; Extrude a little
    G1 X5 E20 F1000                  ; Draw a line
    G92 E0                           ; Reset extruder
    G91                              ; Relative positioning
    G0 X50 F18000                    ; Wipe line 1
    G0 X-40 F18000                   ; Wipe line 2
    G1 E-3.0 F3600                   ; retract a bit
    G0 Z10 F1000                     ; Raise nozzle
    G90                              ; Absolute positioning

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z10 F3000                   ; move nozzle up 10mm
    G90                            ; absolute positioning
    G0  X175 Y300 F3600            ; park nozzle at rear
    BED_MESH_CLEAR
    NEVERMORE_OFF
    M84                            ; motors off

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  BASE_CANCEL_PRINT
  G91 #relative positioning
  G1 Z10 F3000 # move nozzle up
  M18 # disable motors
  M106 S0 # turn off part cooling fan if still on
  

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-20 F1000
    G92 E0          ;Reset the position of the extruder
    G1 E-20 F1000
    RESTORE_GCODE_STATE NAME=M600_state


[gcode_macro LEDS_OFF]
# Turn off chamber LED
gcode:
    set_pin pin=caselight value=0

[gcode_macro LEDS_ON]
# Turn on chamber LED
gcode:
    set_pin pin=caselight value=1.0

[gcode_macro NEVERMORE_ON]
# Turn on Nevermore fan full blast
gcode:
    SET_FAN_SPEED FAN=nevermore_fan SPEED=1.0

[gcode_macro NEVERMORE_OFF]
# Turn off Nevermore fan
gcode:
    SET_FAN_SPEED FAN=nevermore_fan SPEED=0

# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10
[gcode_macro TEST_SPEED]
gcode:
	# Speed
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	# Iterations
	{% set iterations = params.ITERATIONS|default(5)|int %}
	# Acceleration
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	# Bounding box (in case the machine min/maxes are not perfect)
	{% set bound = params.BOUND|default(20)|int %}
	
	# Set speed test bounds (machine minimum/maximum positions, inset by the bounding box)
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}

	# Save current gcode state (absolute/relative, etc)
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	# Absolute positioning
	G90
	
	# Set new limits
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

	# Home and get position for comparison later:
		G28
		# QGL if not already QGLd (only if QGL section exists in config)
		{% if printer.configfile.settings.quad_gantry_level %}
			{% if printer.quad_gantry_level.applied == False %}
				QUAD_GANTRY_LEVEL
				G28 Z
			{% endif %}
		{% endif %}	
		G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
		G4 P1000 
		GET_POSITION

	# Go to starting position
	G0 X{x_min} Y{y_min} Z{bound + 10} F{speed * 60}

	{% for i in range(iterations) %}
		# Diagonals
		G0 X{x_min} Y{y_min} F{speed * 60}
		G0 X{x_max} Y{y_max} F{speed * 60}
		G0 X{x_min} Y{y_min} F{speed * 60}
		G0 X{x_max} Y{y_min} F{speed * 60}
		G0 X{x_min} Y{y_max} F{speed * 60}
		G0 X{x_max} Y{y_min} F{speed * 60}
		
		# Box
		G0 X{x_min} Y{y_min} F{speed * 60}
		G0 X{x_min} Y{y_max} F{speed * 60}
		G0 X{x_max} Y{y_max} F{speed * 60}
		G0 X{x_max} Y{y_min} F{speed * 60}
	{% endfor %}

	# Restore max speed/accel/accel_to_decel to their configured values
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

	# Re-home XY and get position again for comparison:
		G28 X Y
		# Go to XY home positions (in case your homing override leaves it elsewhere)
		G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
		G4 P1000 
		GET_POSITION

	# Restore previous gcode state (absolute/relative, etc)
	RESTORE_GCODE_STATE NAME=TEST_SPEED

[gcode_macro UNLOAD_FIL_FROM_COLD]
gcode:
    G90             ;Let the printer know you are using absolute positioning
    M109 S240.000   ;Heat hotend to 240C
    G92 E0          ;Reset the position of the extruder
    G1 E10 F100     ;Extrude a short distance before unloading to avoid blob forming
    G92 E0          ;Reset the position of the extruder
    G1 E-45 F2000  ;Retract 80 mm of filament at 2000 mm/minute speed
    G92 E0          ;Reset the position of the extruder
    G1 E-35 F2000
    G92 E0          ;Reset the position of the extruder
    M118 REMOVE FILAMENT NOW 
